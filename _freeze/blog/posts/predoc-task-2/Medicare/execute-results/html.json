{
  "hash": "5155d2b198aed449250d2ddf6f52da17",
  "result": {
    "markdown": "---\ntitle: \"Predoc Data Task 1: Data Manipulation\"\ndate: 2023-09-28\ncategories: [\"R\"]\n---\n\n\nMy solution to the sample data manipulation task published by [PreDoc.org](https://predoc.org). \n\nYou can find the full task [here](https://predoc.org/how-to-prepare).\n\n# Load libraries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"dplyr\")\nlibrary(\"readr\")\nlibrary(\"tidyr\")\n```\n:::\n\n\n# Read Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedicare <- read_csv(\"./task/scp-1205.csv\", col_names = FALSE)\n\n# `contract` is missing from the list of variables given in the instructions\n# it is included with the name `contract` in the sample row\nnames(medicare) <- c(\n  \"countyname\",\n  \"state\",\n  \"contract\",\n  \"healthplanname\",\n  \"typeofplan\",\n  \"countyssa\",\n  \"eligibles\",\n  \"enrollees\",\n  \"penetration\",\n  \"ABrate\"\n)\n```\n:::\n\n\n# Fill Missing Values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedicare_filled_missing <- medicare |>\n  mutate(\n    across(\n      c(eligibles, enrollees, penetration),\n      ~ replace_na(.x, 0)\n    )\n  )\n```\n:::\n\n\n# Complete Objective\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedicare_by_county <- medicare_filled_missing |>\n  # Filter territories and District of Columbia\n  filter(!state %in% c(\"PR\", \"GU\", \"DC\", \"VI\", \"AS\")) |>\n  # Filter unspecified counties\n  filter(!(is.na(state) | state == 99)) |>\n  group_by(countyname) |>\n  summarize(\n    # first() is used where all the counties will have the same value\n    state = first(state),\n    numberofplans1 = sum(enrollees > 10),\n    numberofplans2 = sum(penetration > .5),\n    countyssa = first(countyssa),\n    eligibles = first(eligibles),\n    totalenrollees = sum(enrollees),\n    totalpenetration = 100 * totalenrollees / eligibles\n  ) |>\n  arrange(state, countyname)\n```\n:::\n\n\n# Write to CSV\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Commented out for the web writeup.\n# write_csv(medicare_by_county, \"medicare_output.csv\")\n\n# Instead print some of the data.\nhead(medicare_by_county, 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 100 × 8\n   countyname           state numberofplans1 numberofplans2 countyssa eligibles\n   <chr>                <chr>          <int>          <int> <chr>         <dbl>\n 1 ANCHORAGE            AK                 0              0 2020          22404\n 2 DENALI               AK                 0              0 2068              0\n 3 FAIRBANKS NORTH STAR AK                 0              0 2090           5881\n 4 JUNEAU               AK                 4              3 2110           3245\n 5 KENAI PENINSULA      AK                 0              0 2122              0\n 6 KETCHIKAN GATEWAY    AK                 0              0 2130           1537\n 7 KODIAK ISLAND        AK                 0              0 2150            459\n 8 MATANUSKA SUSITNA    AK                 0              0 2170           6071\n 9 PRINCE WALES KETCHIK AK                 0              0 2201              0\n10 SITKA BOROUGH        AK                 0              0 2220            961\n# ℹ 90 more rows\n# ℹ 2 more variables: totalenrollees <dbl>, totalpenetration <dbl>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}